# -*- coding: utf-8 -*-
"""ML_LAB_07b.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17lHSqfo3ffZrHEkFralus5X8JhVjUZvw

Name:Harsh Pandit

Roll No:H036

Program : Mechatronics

Division:H

Batch: H1

Date of Experiment: 3/02/2022

Date of Submission: 15/02/2022
"""

#importing all relevant libraries
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.naive_bayes import GaussianNB
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
from statsmodels.stats.outliers_influence import variance_inflation_factor
from sklearn.impute import SimpleImputer

#reading the file
df=pd.read_csv('tested.csv')
df.head()

#dropping all iirelevant axises
df=df.drop('Name',axis=1)
df=df.drop('Cabin',axis=1)
df=df.drop('Ticket',axis=1)
df.head()

#replacing all categorical variables
df['Sex']=df['Sex'].replace(('male','female'),value=(1,0))
df['Embarked']=df['Embarked'].replace(('Q','S','C'),value=(1,2,3))

df['Age']

df.describe()

#replacing all null value with constant
imp = SimpleImputer(missing_values=np.nan, strategy='constant',fill_value=0)
df=imp.fit(df)

#drop all nulll values
df=df.dropna()

df['Age']

#defining x and y variable
y=df['Survived']
x=df.drop('Survived',axis=1)

#split the data in test and train
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

#defining the model
model=GaussianNB()
model.fit(x_train,y_train)

#finding out predicted value of y
y_pred=model.predict(x_test)

df1=pd.DataFrame()
df1['y']=y_test
df1['y_pred']=y_pred
df1

#finding out error
error=mean_squared_error(df1['y'],df1['y_pred'])
print('The error is: ',error)

"""Conclusion: Hence the gaussian bayes algorithm was implemented succesfully. The error was found out  to be 0."""
# -*- coding: utf-8 -*-
"""ML_LAB_06a.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n2iixZ0QM_8f4WBoX-i8rZpkxm6XwykF

Name:Harsh Pandit

Roll No:H036

Program : Mechatronics

Division:H

Batch: H1

Date of Experiment: 29/01/2022

Date of Submission: 05/01/2022
"""

#import all relevant libraries
import matplotlib.pyplot as plt
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import mean_squared_error
from sklearn.preprocessing import Normalizer

#load the file
df=pd.read_csv('Iris.csv')

df.tail()

df.describe()

#replace with categorical variables
df['Species']=df['Species'].replace(('Iris-setosa','Iris-versicolor','Iris-virginica'),value=(1,2,3))

df.head()

Id=df['Id']

df=df.drop('Id',axis=1)
df.head()

#define y and x variable and split the data in training and testing
y=df['Species']
x=df.drop('Species',axis=1)
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)

#normalize the x variable
mod=Normalizer().fit(x_train)
norm_x_train=mod.transform(x_train)
norm_x_test=mod.transform(x_test)

#apply knn method for various values of k
scores={}
error=[]
K=[]
for k in range (1,len(y_train)):
  knn=KNeighborsClassifier(n_neighbors=k)
  knn.fit(norm_x_train,y_train)
  y_pred=knn.predict(norm_x_test)
  scores[k]=[y_pred]
  error.append(mean_squared_error(y_test,y_pred))
  K.append(k)

#plot value of k vs error
plt.plot(K,error)

"""Conclusion: Hence the knn algorithm was performed on given data for various values of k and the error value was calculated using built in function."""
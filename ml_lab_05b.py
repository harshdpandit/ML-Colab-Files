# -*- coding: utf-8 -*-
"""ML_LAB_05b.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t73dUUN7jtFeP78AutGhEr0uQwkVz47g
"""

Name:Harsh Pandit

Roll No:H036

Program : Mechatronics

Division:H

Batch: H1

Date of Experiment: 20/01/2022

Date of Submission:28/01/2022

#importing all the relevant libraries
import matplotlib.pyplot as plt
from sklearn.linear_model import LogisticRegression
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import confusion_matrix,accuracy_score
import seaborn as sns

df=pd.read_csv('new_gmat.csv')#reading the csv file
df.head()

df=df.drop('Unnamed: 0',axis=1)#dropping the unwanted column
#defining independent and dependent variable
y=df['admitted']
x=df.drop('admitted',axis=1)

df.tail()

#splitting the data into training and testing
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)
model=LogisticRegression()#defining the model
model.fit(x_train,y_train)#fitting the data into the model

y_pred=model.predict(x_test)#predicting values of y

#making a new dataframe of y_pred vs actual y values
df1=pd.DataFrame()
df1['y']=y_test
df1['y pred']=y_pred
df1

accuracy=accuracy_score(y_test,y_pred)#finding the accuracy score
print('accuracy is : ',accuracy)

Confusion_matrix=confusion_matrix(y_test,y_pred)#making the confusion matrix
print(Confusion_matrix)

#plotting the heatmap
ax=sns.heatmap(Confusion_matrix,annot=True,cmap='Purples')
ax.set_title('Seaborn Confusion Matrix with labels\n\n')
ax.set_xlabel('\nPredicted values for admission')
ax.set_ylabel('Actual values for admission');

ax.xaxis.set_ticklabels(['No','Yes'])
ax.yaxis.set_ticklabels(['No','Yes'])

plt.show

"""Conclsion: Hence logistic regression experiment was performed using built in function. We found out the value of accuracy score which came out to be 1. Hence the model is 100% accurate. Here there were multiple independent variables."""
# -*- coding: utf-8 -*-
"""ML_LAB_04a.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LItoA-llbii8G_BXSaFBdUD83UDNth1e
"""

#importing all pakages
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.linear_model import LinearRegression
import plotly.express as px #for scatter plot matrix. we can also use seabone
from sklearn.model_selection import train_test_split
import statsmodels.api as sm

df=pd.read_csv('DiamondsNew.csv')#read the excel
df

df1=df.drop('price',axis=1)#made a new dataframe with only independent variables

px.scatter_matrix(df1)#plotted the scatter plot

from statsmodels.stats.outliers_influence import variance_inflation_factor
  from statsmodels.tools.tools import add_constant

df2=[df1]
df2

#calculated VIF value for all independent varibles
vif_data=pd.DataFrame()
df1=add_constant(df1)
vif_data['Independent Variables']=df1.columns
vif_data['VIF']=[variance_inflation_factor(df1.values , i) for i in range(len(df1.columns))]
vif_data

df2=df.drop(['x','y','z','carat'],axis=1) #dropped the columns with high VIF
df2

df1=df1.drop(['x','y','z','carat'],axis=1) #dropped the columns with high VIF
df1

y=df2['price']
x=df1
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2)#split the data in test and train

model=LinearRegression()
model.fit(x_train,y_train)
y_pred=model.predict(x_test)#predicted the value of y
SSE=(np.sum((y_pred-y_test)**2))#calculated SSE
print('The SSE is:',SSE)
MSE=SSE/(len(y_test)-len(df1.columns)-1)#calculated MSE
print('The MSE is:',MSE)
r_MSE=MSE**0.5
print('The r_MSE is:',r_MSE)

x=sm.add_constant(x)
mod=sm.OLS(y,x)
fit=mod.fit()
fit.summary()



"""Conclusion: Hence multiple linear regression was performed was for given dataset and the categorical variables were dropped."""